<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>jda.modules</groupId>
        <artifactId>jda-module-root</artifactId>
        <version>5.4-SNAPSHOT</version>
    </parent>

    <artifactId>jda-mosar</artifactId>
    <name>JDA Module: MOSA(R) - RESTful Full-Stack Web Software Tool</name>

    <!-- PROPERTIES -->
    <properties>
        <java.version>11</java.version>
        <jersey.version>3.0.1</jersey.version>
        <!--    <jetty.version>11.0.1</jetty.version>-->
        <jetty.version>9.4.38.v20210224</jetty.version>
        <mainClassGen>org.courseman.software.CourseManRFSGen</mainClassGen>
        <mainClassRunBE>org.courseman.software.CourseManRFSRunBE</mainClassRunBE>
    </properties>
    <!-- END: PROPERTIES -->

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>

                    <release>${java.version}</release>                  
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.22</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/example/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- for source code execution (exec:java) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>genrfs</id>
                        <configuration>
                            <daemonThreadJoinTimeout>-1</daemonThreadJoinTimeout>
                            <mainClass>${mainClassGen}</mainClass>
                        </configuration>
                    </execution>
                    <!-- <execution>
                      <id>runfe</id>
                    <configuration>
                      <daemonThreadJoinTimeout>-1</daemonThreadJoinTimeout>
                      <mainClass>${mainClassRun}</mainClass>
                    </configuration>
                    </execution> -->
                    <execution>
                        <id>runbe</id>
                        <configuration>
                            <daemonThreadJoinTimeout>-1</daemonThreadJoinTimeout>
                            <mainClass>${mainClassRunBE}</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Alternative to using Spring Parent POM:
    Import dependency management from Spring Boot -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.4.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- SPRING BOOT -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <!-- END: SPRING BOOT -->

        <!-- JETTY -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!-- END: JETTY -->

        <!-- JERSEY/JAXRS -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.xml.bind</artifactId>
            <version>10.0-b28</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jetty-http</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>org.glassfish.jersey.bundles</groupId>
            <artifactId>jaxrs-ri</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
               <exclusion>
              <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
               </exclusion>
               <exclusion>
              <groupId>org.glassfish</groupId>
            <artifactId>jakarta.json</artifactId>
               </exclusion>
            </exclusions>
        </dependency> -->
        <!-- END: JERSEY/JAXRS -->

        <!-- BYTEBUDDY -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>1.10.20</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-dep</artifactId>
            <version>1.10.20</version>
        </dependency>
        <!-- END: BYTEBUDDY -->

        <!-- TEXT MANIPULATION -->
        <dependency>
            <groupId>org.modeshape</groupId>
            <artifactId>modeshape-common</artifactId>
            <version>5.4.1.Final</version>
        </dependency>
        <!-- END: MODESHAPE -->

        <!-- JSON: required by jda-common -->
        <!-- https://mvnrepository.com/artifact/javax.json/javax.json-api -->
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.1.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.4</version>
        </dependency>
        <!-- END: JSON -->

        <!-- DOMAINAPP -->
        <dependency>
            <!-- exclude json libraries (already present in other dependencies of this module) -->
            <groupId>jda</groupId>
            <artifactId>jda-common</artifactId>
            <version>${jda.version}</version>
        </dependency>
        <dependency>
            <groupId>jda.modules</groupId>
            <artifactId>jda-mccl</artifactId>
            <version>${jda.version}</version>
        </dependency>
        <dependency>
            <groupId>jda.modules</groupId>
            <artifactId>jda-swtool</artifactId>
            <version>${jda.version}</version>
        </dependency>
        <dependency>
            <groupId>jda.modules</groupId>
            <artifactId>jda-dompattern</artifactId>
            <version>${jda.version}</version>
        </dependency>
        <!-- END: DOMAINAPP -->

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>joor</artifactId>
            <version>0.9.13</version>
        </dependency>

        <!-- CALIPER -->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>1.33</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>1.33</version>
            <scope>provided</scope>
        </dependency>
        <!-- END CALIPER -->

        <!-- IN-MEMORY JAVA COMPILER -->
        <dependency>
            <groupId>org.mdkt.compiler</groupId>
            <artifactId>InMemoryJavaCompiler</artifactId>
            <version>1.3.0</version>
        </dependency>
        <!-- END: IN-MEMORY JAVA COMPILER -->

        <!-- Derby DB for jDomainApp -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbynet</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyshared</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <!-- END: DERBY DB -->


        <!-- JAVAPARSER -->
        <dependency>
            <groupId>com.github.javaparser</groupId>
            <artifactId>javaparser-core</artifactId>
            <version>3.8.2</version>
        </dependency>
        <!-- END: JAVAPARSER -->

        <!-- Reflections -->
        <!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.12</version>
        </dependency>

        <!-- Logging -->
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!-- END: logging -->

        <!--Lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
