import java.util.ArrayList;
import java.util.Collection;

import domainapp.basics.exceptions.ConstraintViolationException;
import domainapp.basics.model.meta.AttrRef;
import domainapp.basics.model.meta.DAssoc;
import domainapp.basics.model.meta.DAssoc.AssocEndType;
import domainapp.basics.model.meta.DAssoc.AssocType;
import domainapp.basics.model.meta.DAssoc.Associate;
import domainapp.basics.model.meta.DAttr;
import domainapp.basics.model.meta.DAttr.Type;
import domainapp.basics.model.meta.DOpt;
import domainapp.basics.model.meta.MetaConstants;
import domainapp.basics.model.meta.Select;

/**
 * @overview 
 *  Pattern: Multi Source Derived Attribute
 * 
 * @overview 
 *  Class {@link C} that contains the multi-source derived attribute.
 *  
 * @author dmle
 */
class C {
  @DAttr(name="aDerived",auto=true,mutable=false,serialisable=false)
  private Object aDerived;
  
  // constructor method
  @DOpt(type=DOpt.Type.DataSourceConstructor)
  public C() {
    // update derived attribute value from data source
    updateADerived();
  }

  @DOpt(type=DOpt.Type.Getter)@AttrRef(value="aDerived")
  public Object getADerived() {
    return aDerived;
  }

  @DOpt(type=DOpt.Type.DerivedAttributeUpdater) @AttrRef(value="aDerived")
  public Object updateADerived() {
    // TODO implement this
  }  
}

