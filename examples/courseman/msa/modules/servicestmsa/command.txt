bin/zookeeper-server-start.sh config/zookeeper.properties
bin/kafka-server-start.sh config/server.properties


https://github.com/jdomainapp/jda.git
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



ASSESSMENTHUB--------------------
CREATE TABLE IF NOT EXISTS assessmenthub.coursemodule
(
    id integer NOT NULL DEFAULT nextval('assessmenthub.coursemodule_id_seq'::regclass),
    code character varying(12) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    semester integer,
    credits integer,
    coursemoduletype character varying(30) COLLATE pg_catalog."default",
    deptname character varying(30) COLLATE pg_catalog."default",
    teacher_id integer,
    CONSTRAINT coursemodule_pkey PRIMARY KEY (id),
    CONSTRAINT teacher_fk FOREIGN KEY (teacher_id)
        REFERENCES assessmenthub.teacher (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);

CREATE TABLE IF NOT EXISTS assessmenthub.enrolment
(
    id integer NOT NULL DEFAULT nextval('assessmenthub.enrolment_id_seq'::regclass),
    student_id character varying(6) COLLATE pg_catalog."default",
    coursemodule_id integer,
    internalmark double precision,
    exammark double precision,
    finalgrade character(1) COLLATE pg_catalog."default",
    CONSTRAINT enrolment_pkey PRIMARY KEY (id),
    CONSTRAINT coursemodule_fk FOREIGN KEY (coursemodule_id)
        REFERENCES assessmenthub.coursemodule (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID,
    CONSTRAINT student_fk FOREIGN KEY (student_id)
        REFERENCES assessmenthub.student (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);

CREATE TABLE IF NOT EXISTS assessmenthub.student
(
    id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    gender_name character varying(10) COLLATE pg_catalog."default",
    dob date,
    address_id integer,
    email character varying(30) COLLATE pg_catalog."default",
    studentclass_id integer,
    deptname character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT student_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS assessmenthub.teacher
(
    id integer NOT NULL DEFAULT nextval('assessmenthub.teacher_id_seq'::regclass),
    name character varying(30) COLLATE pg_catalog."default",
    gender_name character varying(10) COLLATE pg_catalog."default",
    dob date,
    address_id integer,
    email character varying(30) COLLATE pg_catalog."default",
    deptname character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT teacher_pkey PRIMARY KEY (id)
);


COURSEMGNT------------------------
CREATE TABLE IF NOT EXISTS coursemgnt.student
(
    id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    gender_name character varying(10) COLLATE pg_catalog."default",
    dob date,
    address_id integer,
    email character varying(30) COLLATE pg_catalog."default",
    studentclass_id integer,
    CONSTRAINT student_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS coursemgnt.teacher
(
    id integer NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    gender_name character varying(10) COLLATE pg_catalog."default",
    dob date,
    address_id integer,
    email character varying(30) COLLATE pg_catalog."default",
    deptname character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT teacher_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS coursemgnt.coursemodule
(
    id integer NOT NULL,
    code character varying(12) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    semester integer,
    credits integer,
    coursemoduletype character varying(30) COLLATE pg_catalog."default",
    deptname character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT coursemodule_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS coursemgnt.coursemodulemgnt
(
    id SERIAL,
    coursemodule_id integer NOT NULL,
    teacher_id integer NOT NULL,
    CONSTRAINT coursemodulemgnt_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS coursemgnt.enrolment
(
    id integer NOT NULL,
    student_id character varying(6) COLLATE pg_catalog."default",
    coursemodule_id integer,
    internalmark double precision,
    exammark double precision,
    finalgrade character(1) COLLATE pg_catalog."default",
    CONSTRAINT enrolment_pkey PRIMARY KEY (id)
);

