import {useCallback} from 'react';import {useAPI} from '../../../common_hooks/useAPI';import {  DefaultListAction,  DefaultListItemAction,} from '../contexts/ListContext';import {IJDAItemControl} from './useListItemsControl';export function useBasicListActionWithAPI<  ItemType,  ListActionTypes = DefaultListAction,  ListItemActionTypes = DefaultListItemAction<ItemType>,>(  itemsViewControl: IJDAItemControl<ItemType>,  keyField: keyof ItemType,  routeName: string,) {  const api = useAPI<ItemType>(routeName);  const refreshList = useCallback(async () => {    //TODO api does not support pageSize    const result = await api.getByPage(0);    if (result.success) {      itemsViewControl.resetItems(result.payload.content || []);    }  }, [api, itemsViewControl]);  // const deleteItem = useCallback(  //   async (item: ItemType) => {  //     const result = await api.deleteById(String(item[keyField]));  //     if (result.success) {  //       itemsViewControl.removeItems([item[keyField]]);  //     }  //   },  //   [api, itemsViewControl, keyField],  // );  const useListItemAction = useCallback((action: keyof ListItemActionTypes) => {    // deleteItem()    return;  }, []);  const useListAction = useCallback(    (action: keyof ListActionTypes) => {      refreshList();    },    [refreshList],  );  return {useListAction, useListItemAction};}