package jda.modules.dcsl.syntax;

import java.lang.annotation.Documented;
import java.lang.annotation.Repeatable;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

/**
 * 
 * @overview 
 *  Operation metadata
 *  
 * @author dmle
 *
 * @version 
 * - 3.3: Renamed from Metadata and standardise {@link Type} names
 */
@Retention(RetentionPolicy.RUNTIME)
@Repeatable(DOpts.class)
@Documented
public @interface DOpt {
  
  /** Metadata types */
  public static enum Type {
    // METHODS
    /** construct a new object from values of non-optional attribute(s) */
    RequiredConstructor,
    /** construct a new object from user-specified data entered on an object form*/
    DataSourceConstructor,
    /** generate a new value of an auto attribute*/
    ObjectFormConstructor,
    /** generate a new value of an auto attribute*/
    AutoAttributeValueGen,
    /** update the value of auto attributes to synchronise with the data source*/
    AutoAttributeValueSynchroniser, //v3.3: MethodUpdateAutoGeneratedValue,
    /**association link count getter*/
    LinkCountGetter, //v3.3 MethodGetAssociationLinkCount,
    /**association link count setter*/
    LinkCountSetter, // v3.3: MethodSetAssociationLinkCount,
    /** add an existing association link (e.g. after retrieving from data source)*/
    LinkAdder, // v3.3: MethodValueAdder,
    /**add a newly-created association link*/
    LinkAdderNew,  // v3.3: MethodValueAdderNew,
    /**remove an association link*/
    LinkRemover, // v3.3: MethodValueRemover,
    /** update this object when changes had occured to a linked object (passed in as input)*/
    LinkUpdater, // v3.3: MethodValueUpdater,
    /** setter */
    Setter, // v3.3: MethodSetter,
    /** getter */
    Getter, // v3.3: MethodGetter,

    /** object method that updates the value of a multi-source derived attribute 
     * (i.e. derived from two or more other attributes) */
    DerivedAttributeUpdater, 
    /** class method that generate the value of a derived attribute from some input arguments
     * (reverse of this is {@link #MethodParseDerivedAttributeValue})
     */
    DerivedAttributeGetter,
    /** class method that parse value of a derived attribute 
     * (such value is generated by {@link #MethodGetDerivedAttributeValue})
     * */
    DerivedAttributeParser,
    /**
     * object method to obtain 
     * the most up-to-date state of the current object (or objects in the buffer
     * if this is a child controller) before displaying them on the object form . 
     * This is necessary especially when these objects have derived
     * attributes, whose values are computed from states of other objects but
     * changes to these objects' state have not yet been effected on these
     * objects. 
     * 
     * v2.7.4: 
     */
    ObjectStateRefresher, 
    /**
     * method that implements the default value for a domain attribute 
     * v2.7.4*/
    DefaultValueFunction,
    /***
     * A method that defines and executes a query to retrieve domain objects that are used as value for a given attribute 
     * of a domain class.
     * 
     * @version 3.1
     */
    SourceQueryHandler,
    /**
     * the method that performs a data function
     * v2.7.4
     */
    DataFunctionImpl, 
  }
  
  /**
   * The type of metadata, which is specified by {@link DOpt.Type}
   */
  public Type type();
  
  /**
   * Pre-conditions of this method
   * @version 5.2 
   */
  public String requires() default DCSLConstants.DEFAULT_DOPT_REQUIRES;
  
  /**
   * Post-conditions of this method
   * @version 5.2 
   */
  public String effects() default DCSLConstants.DEFAULT_DOPT_EFFECTS;
}
